{"ast":null,"code":"var _jsxFileName = \"/media/pratham/Pratham/slot-book-app/frontend/src/screens/SlotScreen.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Form, Button } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport FormContainer from '../components/FormContainer';\nimport { listSlotDetails, updateSlot } from '../redux/actions/slotActions';\nimport Message from '../components/Message';\nimport ReactLoading from 'react-loading';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst SlotScreen = ({\n  match,\n  history\n}) => {\n  _s();\n\n  var _slot$slotData7;\n\n  const [firstname, setFirstName] = useState('');\n  const [lastname, setLastName] = useState('');\n  const [mobile, setMobile] = useState('');\n  const [message, setMessage] = useState('');\n  const [action, setAction] = useState(''); // DISPATCH\n\n  const dispatch = useDispatch();\n  const userLogin = useSelector(state => state.userLogin);\n  const {\n    userInfo\n  } = userLogin; // CREATE POST REDUCER\n\n  const slotDetails = useSelector(state => state.slotDetails);\n  const {\n    loading,\n    slot,\n    error\n  } = slotDetails;\n  const slotUpdate = useSelector(state => state.slotUpdate);\n  const {\n    loading: loadingUpdate,\n    updatedslot,\n    error: errorUpdate\n  } = slotUpdate;\n  useEffect(() => {\n    if (!userInfo) {\n      history.push('/login');\n    } else {\n      var _slot$slotData;\n\n      if ((slot === null || slot === void 0 ? void 0 : (_slot$slotData = slot.slotData) === null || _slot$slotData === void 0 ? void 0 : _slot$slotData._id) !== match.params.id) {\n        dispatch(listSlotDetails(match.params.id));\n      } else {\n        var _slot$slotData2, _slot$slotData6;\n\n        if (slot === null || slot === void 0 ? void 0 : (_slot$slotData2 = slot.slotData) === null || _slot$slotData2 === void 0 ? void 0 : _slot$slotData2.isBooked) {\n          var _slot$slotData3, _slot$slotData4, _slot$slotData5;\n\n          setFirstName(slot === null || slot === void 0 ? void 0 : (_slot$slotData3 = slot.slotData) === null || _slot$slotData3 === void 0 ? void 0 : _slot$slotData3.firstname);\n          setLastName(slot === null || slot === void 0 ? void 0 : (_slot$slotData4 = slot.slotData) === null || _slot$slotData4 === void 0 ? void 0 : _slot$slotData4.lastname);\n          setMobile(slot === null || slot === void 0 ? void 0 : (_slot$slotData5 = slot.slotData) === null || _slot$slotData5 === void 0 ? void 0 : _slot$slotData5.mobile);\n        }\n\n        setAction((slot === null || slot === void 0 ? void 0 : (_slot$slotData6 = slot.slotData) === null || _slot$slotData6 === void 0 ? void 0 : _slot$slotData6.isBooked) ? 'Update' : 'Create');\n      }\n    }\n  }, [history, userInfo, slot === null || slot === void 0 ? void 0 : (_slot$slotData7 = slot.slotData) === null || _slot$slotData7 === void 0 ? void 0 : _slot$slotData7.isBooked]); // SUBMIT HANDLER\n\n  const submitHandler = e => {\n    e.preventDefault();\n\n    if (!firstname || !lastname || !mobile) {\n      setMessage('All fields are required');\n    } else {\n      // DISPATCH CREATE POST\n      dispatch(updateSlot(firstname, lastname, mobile, match.params.id)); // REDIRECT TO HOMEPAGE\n\n      history.push('/');\n    }\n  };\n\n  return (\n    /*#__PURE__*/\n    // LOCAL STATES FOR INPUT\n    _jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        className: \"btn btn-light my-3\",\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-arrow-circle-left text-dark\",\n          children: \" GO BACK\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(FormContainer, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-center text-secondary my-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-clock text-info\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 11\n          }, this), \" BOOK SLOT\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 9\n        }, this), message && /*#__PURE__*/_jsxDEV(Message, {\n          variant: \"warning\",\n          children: [\" \", message]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this), error && /*#__PURE__*/_jsxDEV(Message, {\n          variant: \"danger\",\n          children: [\" \", error]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 19\n        }, this), loading && /*#__PURE__*/_jsxDEV(ReactLoading, {\n          className: \"m-auto\",\n          type: \"spin\",\n          color: \"#33C1FF\",\n          height: '10%',\n          width: '10%'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: submitHandler,\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"firstname\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"firstname \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              placeholder: \"enter firstname\",\n              value: firstname,\n              onChange: e => setFirstName(e.target.value),\n              style: {\n                borderLeft: '5px solid #33C1FF'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"lastname\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"lastname \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              placeholder: \"enter your lastname\",\n              value: lastname,\n              onChange: e => setLastName(e.target.value),\n              style: {\n                borderLeft: '5px solid #33C1FF'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"mobile\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"mobile \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              placeholder: \"enter mobile\",\n              type: \"number\",\n              value: mobile,\n              onChange: e => setMobile(e.target.value),\n              style: {\n                borderLeft: '5px solid #33C1FF'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            onClick: submitHandler,\n            className: \"btn btn-block btn-info py-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              class: \"fas fa-save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 13\n            }, this), \" \", action]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"btn\",\n            className: \"btn btn-block btn-danger py-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              class: \"fas fa-backspace\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 13\n            }, this), \" Cancel\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true)\n  );\n};\n\n_s(SlotScreen, \"F0C9jsnp7KQeQFNPUIp4CC3Y148=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector];\n});\n\n_c = SlotScreen;\nexport default SlotScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"SlotScreen\");","map":{"version":3,"sources":["/media/pratham/Pratham/slot-book-app/frontend/src/screens/SlotScreen.jsx"],"names":["React","useState","useEffect","Form","Button","Link","useDispatch","useSelector","FormContainer","listSlotDetails","updateSlot","Message","ReactLoading","SlotScreen","match","history","firstname","setFirstName","lastname","setLastName","mobile","setMobile","message","setMessage","action","setAction","dispatch","userLogin","state","userInfo","slotDetails","loading","slot","error","slotUpdate","loadingUpdate","updatedslot","errorUpdate","push","slotData","_id","params","id","isBooked","submitHandler","e","preventDefault","target","value","borderLeft"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Form, Button } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport FormContainer from '../components/FormContainer';\nimport { listSlotDetails, updateSlot } from '../redux/actions/slotActions';\nimport Message from '../components/Message';\nimport ReactLoading from 'react-loading';\n\nconst SlotScreen = ({ match, history }) => {\n  const [firstname, setFirstName] = useState('');\n  const [lastname, setLastName] = useState('');\n  const [mobile, setMobile] = useState('');\n  const [message, setMessage] = useState('');\n  const [action, setAction] = useState('');\n\n  // DISPATCH\n  const dispatch = useDispatch();\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  // CREATE POST REDUCER\n  const slotDetails = useSelector((state) => state.slotDetails);\n  const { loading, slot, error } = slotDetails;\n\n  const slotUpdate = useSelector((state) => state.slotUpdate);\n  const {\n    loading: loadingUpdate,\n    updatedslot,\n    error: errorUpdate,\n  } = slotUpdate;\n\n  useEffect(() => {\n    if (!userInfo) {\n      history.push('/login');\n    } else {\n      if (slot?.slotData?._id !== match.params.id) {\n        dispatch(listSlotDetails(match.params.id));\n      } else {\n        if (slot?.slotData?.isBooked) {\n          setFirstName(slot?.slotData?.firstname);\n          setLastName(slot?.slotData?.lastname);\n          setMobile(slot?.slotData?.mobile);\n        }\n        setAction(slot?.slotData?.isBooked ? 'Update' : 'Create');\n      }\n    }\n  }, [history, userInfo, slot?.slotData?.isBooked]);\n\n  // SUBMIT HANDLER\n  const submitHandler = (e) => {\n    e.preventDefault();\n\n    if (!firstname || !lastname || !mobile) {\n      setMessage('All fields are required');\n    } else {\n      // DISPATCH CREATE POST\n      dispatch(updateSlot(firstname, lastname, mobile, match.params.id));\n      // REDIRECT TO HOMEPAGE\n      history.push('/');\n    }\n  };\n\n  return (\n    // LOCAL STATES FOR INPUT\n\n    <>\n      <Link to=\"/\" className=\"btn btn-light my-3\">\n        <i className=\"fas fa-arrow-circle-left text-dark\"> GO BACK</i>\n      </Link>\n      <FormContainer>\n        <h2 className=\"text-center text-secondary my-2\">\n          <i className=\"fas fa-clock text-info\"></i> BOOK SLOT\n        </h2>\n        {message && <Message variant=\"warning\"> {message}</Message>}\n        {error && <Message variant=\"danger\"> {error}</Message>}\n\n        {loading && (\n          <ReactLoading\n            className=\"m-auto\"\n            type=\"spin\"\n            color=\"#33C1FF\"\n            height={'10%'}\n            width={'10%'}\n          />\n        )}\n\n        <Form onSubmit={submitHandler}>\n          <Form.Group controlId=\"firstname\">\n            <Form.Label>firstname </Form.Label>\n            <Form.Control\n              type=\"text\"\n              placeholder=\"enter firstname\"\n              value={firstname}\n              onChange={(e) => setFirstName(e.target.value)}\n              style={{ borderLeft: '5px solid #33C1FF' }}\n            ></Form.Control>\n          </Form.Group>\n\n          <Form.Group controlId=\"lastname\">\n            <Form.Label>lastname </Form.Label>\n            <Form.Control\n              type=\"text\"\n              placeholder=\"enter your lastname\"\n              value={lastname}\n              onChange={(e) => setLastName(e.target.value)}\n              style={{ borderLeft: '5px solid #33C1FF' }}\n            ></Form.Control>\n          </Form.Group>\n\n          <Form.Group controlId=\"mobile\">\n            <Form.Label>mobile </Form.Label>\n            <Form.Control\n              placeholder=\"enter mobile\"\n              type=\"number\"\n              value={mobile}\n              onChange={(e) => setMobile(e.target.value)}\n              style={{ borderLeft: '5px solid #33C1FF' }}\n            ></Form.Control>\n          </Form.Group>\n\n          <Button\n            type=\"submit\"\n            onClick={submitHandler}\n            className=\"btn btn-block btn-info py-2\"\n          >\n            <i class=\"fas fa-save\"></i> {action}\n          </Button>\n          <Button type=\"btn\" className=\"btn btn-block btn-danger py-2\">\n            <i class=\"fas fa-backspace\"></i> Cancel\n          </Button>\n        </Form>\n      </FormContainer>\n    </>\n  );\n};\n\nexport default SlotScreen;\n"]},"metadata":{},"sourceType":"module"}
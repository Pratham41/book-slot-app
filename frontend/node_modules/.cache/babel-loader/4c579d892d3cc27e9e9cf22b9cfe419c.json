{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { userLoginReducer, userRegisterReducer } from './redux/reducers/userReducer';\nimport { slotListReducer, slotDetailsReducer, slotCreateReducer } from './redux/reducers/slotReducer';\nconst reducer = combineReducers({\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  slotList: slotListReducer,\n  slotDetails: slotDetailsReducer,\n  slotCreate: slotCreateReducer\n});\nconst userInfoFromStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null;\nconst initialState = {\n  userLogin: {\n    userInfo: userInfoFromStorage\n  }\n};\nconst middleware = [thunk];\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"sources":["/media/pratham/Pratham/slot-book-app/frontend/src/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","userLoginReducer","userRegisterReducer","slotListReducer","slotDetailsReducer","slotCreateReducer","reducer","userLogin","userRegister","slotList","slotDetails","slotCreate","userInfoFromStorage","localStorage","getItem","JSON","parse","initialState","userInfo","middleware","store"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AAEA,SACEC,gBADF,EAEEC,mBAFF,QAGO,8BAHP;AAKA,SACEC,eADF,EAEEC,kBAFF,EAGEC,iBAHF,QAIO,8BAJP;AAMA,MAAMC,OAAO,GAAGT,eAAe,CAAC;AAC9BU,EAAAA,SAAS,EAAEN,gBADmB;AAE9BO,EAAAA,YAAY,EAAEN,mBAFgB;AAG9BO,EAAAA,QAAQ,EAAEN,eAHoB;AAI9BO,EAAAA,WAAW,EAAEN,kBAJiB;AAK9BO,EAAAA,UAAU,EAAEN;AALkB,CAAD,CAA/B;AAQA,MAAMO,mBAAmB,GAAGC,YAAY,CAACC,OAAb,CAAqB,UAArB,IACxBC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CADwB,GAExB,IAFJ;AAIA,MAAMG,YAAY,GAAG;AACnBV,EAAAA,SAAS,EAAE;AAAEW,IAAAA,QAAQ,EAAEN;AAAZ;AADQ,CAArB;AAIA,MAAMO,UAAU,GAAG,CAACpB,KAAD,CAAnB;AAEA,MAAMqB,KAAK,GAAGxB,WAAW,CACvBU,OADuB,EAEvBW,YAFuB,EAGvBjB,mBAAmB,CAACF,eAAe,CAAC,GAAGqB,UAAJ,CAAhB,CAHI,CAAzB;AAMA,eAAeC,KAAf","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nimport {\n  userLoginReducer,\n  userRegisterReducer,\n} from './redux/reducers/userReducer';\n\nimport {\n  slotListReducer,\n  slotDetailsReducer,\n  slotCreateReducer,\n} from './redux/reducers/slotReducer';\n\nconst reducer = combineReducers({\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  slotList: slotListReducer,\n  slotDetails: slotDetailsReducer,\n  slotCreate: slotCreateReducer,\n});\n\nconst userInfoFromStorage = localStorage.getItem('userInfo')\n  ? JSON.parse(localStorage.getItem('userInfo'))\n  : null;\n\nconst initialState = {\n  userLogin: { userInfo: userInfoFromStorage },\n};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  reducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default store;\n"]},"metadata":{},"sourceType":"module"}
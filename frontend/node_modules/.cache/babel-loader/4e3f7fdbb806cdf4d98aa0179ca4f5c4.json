{"ast":null,"code":"var _jsxFileName = \"/media/pratham/Pratham/slot-book-app/frontend/src/screens/SlotScreen.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Form, Button } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport FormContainer from '../components/FormContainer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst SlotScreen = ({\n  history\n}) => {\n  _s();\n\n  const [firstname, setFirstName] = useState('');\n  const [lastname, setLastName] = useState('');\n  const [mobile, setMobile] = useState(''); // DISPATCH\n\n  const dispatch = useDispatch();\n  const userLogin = useSelector(state => state.userLogin);\n  const {\n    loading,\n    error,\n    userInfo\n  } = userLogin; // CREATE POST REDUCER\n  //   const postCreate = useSelector((state) => state.postCreate);\n  //   const { error } = postCreate;\n\n  useEffect(() => {\n    if (!userInfo) {\n      history.push('/login');\n    }\n  }, [history, userInfo]); // SUBMIT HANDLER\n\n  const submitHandler = e => {\n    e.preventDefault();\n\n    if (!firstname || !lastname || !mobile) {//   setMessage('All fields are required');\n    } else {\n      // DISPATCH CREATE POST\n      //   dispatch(createPost(title, name, content));\n      // REDIRECT TO HOMEPAGE\n      history.push('/');\n    }\n  };\n\n  return (\n    /*#__PURE__*/\n    // LOCAL STATES FOR INPUT\n    _jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(FormContainer, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-center text-warning my-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-pencil-alt text-success\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 11\n          }, this), \" Book Slot\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: submitHandler,\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"firstname\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"firstname \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              placeholder: \"enter firstname\",\n              value: firstname,\n              onChange: e => setFirstName(e.target.value),\n              style: {\n                borderLeft: '5px solid green'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"lastname\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"lastname \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              placeholder: \"enter your lastname\",\n              value: lastname,\n              onChange: e => setLastName(e.target.value),\n              style: {\n                borderLeft: '5px solid green'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"mobile\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"mobile \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              placeholder: \"enter mobile\",\n              as: \"textarea\",\n              rows: 5,\n              value: mobile,\n              onChange: e => setMobile(e.target.value),\n              style: {\n                borderLeft: '5px solid green'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            className: \"btn btn-block btn-success py-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              class: \"fas fa-thumbs-up\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 13\n            }, this), \" Update\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"btn\",\n            className: \"btn btn-block btn-danger py-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              class: \"fas fa-thumbs-up\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 13\n            }, this), \" Cancel\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 7\n      }, this)\n    }, void 0, false)\n  );\n};\n\n_s(SlotScreen, \"u+WxzUbO7h9Ie5qExfuhYo95Jb0=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = SlotScreen;\nexport default SlotScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"SlotScreen\");","map":{"version":3,"sources":["/media/pratham/Pratham/slot-book-app/frontend/src/screens/SlotScreen.jsx"],"names":["React","useState","useEffect","Form","Button","useDispatch","useSelector","FormContainer","SlotScreen","history","firstname","setFirstName","lastname","setLastName","mobile","setMobile","dispatch","userLogin","state","loading","error","userInfo","push","submitHandler","e","preventDefault","target","value","borderLeft"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Form, Button } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport FormContainer from '../components/FormContainer';\n\nconst SlotScreen = ({ history }) => {\n  const [firstname, setFirstName] = useState('');\n  const [lastname, setLastName] = useState('');\n  const [mobile, setMobile] = useState('');\n\n  // DISPATCH\n  const dispatch = useDispatch();\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { loading, error, userInfo } = userLogin;\n\n  // CREATE POST REDUCER\n  //   const postCreate = useSelector((state) => state.postCreate);\n  //   const { error } = postCreate;\n\n  useEffect(() => {\n    if (!userInfo) {\n      history.push('/login');\n    }\n  }, [history, userInfo]);\n\n  // SUBMIT HANDLER\n  const submitHandler = (e) => {\n    e.preventDefault();\n\n    if (!firstname || !lastname || !mobile) {\n      //   setMessage('All fields are required');\n    } else {\n      // DISPATCH CREATE POST\n      //   dispatch(createPost(title, name, content));\n      // REDIRECT TO HOMEPAGE\n      history.push('/');\n    }\n  };\n\n  return (\n    // LOCAL STATES FOR INPUT\n\n    <>\n      <FormContainer>\n        {/* {message && <Message variant='warning'> {message}</Message>}\n        {error && <Message variant='danger'> {error}</Message>} */}\n\n        <h2 className=\"text-center text-warning my-2\">\n          <i className=\"fas fa-pencil-alt text-success\"></i> Book Slot\n        </h2>\n\n        <Form onSubmit={submitHandler}>\n          <Form.Group controlId=\"firstname\">\n            <Form.Label>firstname </Form.Label>\n            <Form.Control\n              type=\"text\"\n              placeholder=\"enter firstname\"\n              value={firstname}\n              onChange={(e) => setFirstName(e.target.value)}\n              style={{ borderLeft: '5px solid green' }}\n            ></Form.Control>\n          </Form.Group>\n\n          <Form.Group controlId=\"lastname\">\n            <Form.Label>lastname </Form.Label>\n            <Form.Control\n              type=\"text\"\n              placeholder=\"enter your lastname\"\n              value={lastname}\n              onChange={(e) => setLastName(e.target.value)}\n              style={{ borderLeft: '5px solid green' }}\n            ></Form.Control>\n          </Form.Group>\n\n          <Form.Group controlId=\"mobile\">\n            <Form.Label>mobile </Form.Label>\n            <Form.Control\n              placeholder=\"enter mobile\"\n              as=\"textarea\"\n              rows={5}\n              value={mobile}\n              onChange={(e) => setMobile(e.target.value)}\n              style={{ borderLeft: '5px solid green' }}\n            ></Form.Control>\n          </Form.Group>\n\n          <Button type=\"submit\" className=\"btn btn-block btn-success py-2\">\n            <i class=\"fas fa-thumbs-up\"></i> Update\n          </Button>\n          <Button type=\"btn\" className=\"btn btn-block btn-danger py-2\">\n            <i class=\"fas fa-thumbs-up\"></i> Cancel\n          </Button>\n        </Form>\n      </FormContainer>\n    </>\n  );\n};\n\nexport default SlotScreen;\n"]},"metadata":{},"sourceType":"module"}
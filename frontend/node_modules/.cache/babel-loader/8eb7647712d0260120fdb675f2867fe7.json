{"ast":null,"code":"import _regeneratorRuntime from\"/media/pratham/Pratham/slot-book-app/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/media/pratham/Pratham/slot-book-app/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import axios from'axios';// AXIOS\n// GETTING CONSTANTS\nimport{SLOT_LIST_FAIL,SLOT_LIST_REQUEST,SLOT_LIST_SUCCESS,SLOT_DETAILS_REQUEST,SLOT_DETAILS_SUCCESS,SLOT_DETAILS_FAIL,SLOT_UPDATE_REQUEST,SLOT_UPDATE_SUCCESS,SLOT_UPDATE_FAIL}from'../constants/slotConstants';// LIST ALL POSTS ACTION\nexport var listSlots=function listSlots(){return/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch){var _yield$axios$get,data;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;dispatch({type:SLOT_LIST_REQUEST});_context.next=4;return axios.get('/api/slot/getall');case 4:_yield$axios$get=_context.sent;data=_yield$axios$get.data;dispatch({type:SLOT_LIST_SUCCESS,payload:data});_context.next=12;break;case 9:_context.prev=9;_context.t0=_context[\"catch\"](0);dispatch({type:SLOT_LIST_FAIL,payload:_context.t0});case 12:case\"end\":return _context.stop();}}},_callee,null,[[0,9]]);}));return function(_x){return _ref.apply(this,arguments);};}();};// POST DETAIL ACTION\nexport var listSlotDetails=function listSlotDetails(id){return/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch){var _yield$axios$get2,data;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.prev=0;dispatch({type:SLOT_DETAILS_REQUEST});_context2.next=4;return axios.get(\"/api/slot/\".concat(id));case 4:_yield$axios$get2=_context2.sent;data=_yield$axios$get2.data;dispatch({type:SLOT_DETAILS_SUCCESS,payload:data});_context2.next=12;break;case 9:_context2.prev=9;_context2.t0=_context2[\"catch\"](0);dispatch({type:SLOT_DETAILS_FAIL,payload:_context2.t0});case 12:case\"end\":return _context2.stop();}}},_callee2,null,[[0,9]]);}));return function(_x2){return _ref2.apply(this,arguments);};}();};// CREATE NEW POST ACTION\nexport var updateSlot=function updateSlot(firstname,lastname,mobile,id){return/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(dispatch){var config,_yield$axios$put,data;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.prev=0;dispatch({type:SLOT_UPDATE_REQUEST});config={headers:{'Content-Type':'application/json'}};_context3.next=5;return axios.put(\"/api/slot/:\".concat(id),{firstname:firstname,lastname:lastname,mobile:mobile,id:id},config);case 5:_yield$axios$put=_context3.sent;data=_yield$axios$put.data;dispatch({type:SLOT_UPDATE_SUCCESS,payload:data});_context3.next=13;break;case 10:_context3.prev=10;_context3.t0=_context3[\"catch\"](0);dispatch({type:SLOT_UPDATE_FAIL,payload:_context3.t0.message});case 13:case\"end\":return _context3.stop();}}},_callee3,null,[[0,10]]);}));return function(_x3){return _ref3.apply(this,arguments);};}();};","map":{"version":3,"sources":["/media/pratham/Pratham/slot-book-app/frontend/src/redux/actions/slotActions.js"],"names":["axios","SLOT_LIST_FAIL","SLOT_LIST_REQUEST","SLOT_LIST_SUCCESS","SLOT_DETAILS_REQUEST","SLOT_DETAILS_SUCCESS","SLOT_DETAILS_FAIL","SLOT_UPDATE_REQUEST","SLOT_UPDATE_SUCCESS","SLOT_UPDATE_FAIL","listSlots","dispatch","type","get","data","payload","listSlotDetails","id","updateSlot","firstname","lastname","mobile","config","headers","put","message"],"mappings":"qUAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAA2B;AAE3B;AACA,OACEC,cADF,CAEEC,iBAFF,CAGEC,iBAHF,CAIEC,oBAJF,CAKEC,oBALF,CAMEC,iBANF,CAOEC,mBAPF,CAQEC,mBARF,CASEC,gBATF,KAUO,4BAVP,CAYA;AACA,MAAO,IAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,kGAAM,iBAAOC,QAAP,4JAE3BA,QAAQ,CAAC,CAAEC,IAAI,CAAEV,iBAAR,CAAD,CAAR,CAF2B,sBAIJF,CAAAA,KAAK,CAACa,GAAN,CAAU,kBAAV,CAJI,uCAInBC,IAJmB,kBAInBA,IAJmB,CAK3BH,QAAQ,CAAC,CAAEC,IAAI,CAAET,iBAAR,CAA2BY,OAAO,CAAED,IAApC,CAAD,CAAR,CAL2B,+EAO3BH,QAAQ,CAAC,CAAEC,IAAI,CAAEX,cAAR,CAAwBc,OAAO,YAA/B,CAAD,CAAR,CAP2B,oEAAN,gEAAlB,CAWP;AACA,MAAO,IAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,EAAD,kGAAQ,kBAAON,QAAP,kKAEnCA,QAAQ,CAAC,CAAEC,IAAI,CAAER,oBAAR,CAAD,CAAR,CAFmC,uBAIZJ,CAAAA,KAAK,CAACa,GAAN,qBAAuBI,EAAvB,EAJY,yCAI3BH,IAJ2B,mBAI3BA,IAJ2B,CAMnCH,QAAQ,CAAC,CAAEC,IAAI,CAAEP,oBAAR,CAA8BU,OAAO,CAAED,IAAvC,CAAD,CAAR,CANmC,mFAQnCH,QAAQ,CAAC,CAAEC,IAAI,CAAEN,iBAAR,CAA2BS,OAAO,aAAlC,CAAD,CAAR,CARmC,sEAAR,kEAAxB,CAYP;AACA,MAAO,IAAMG,CAAAA,UAAU,CACrB,QADWA,CAAAA,UACX,CAACC,SAAD,CAAYC,QAAZ,CAAsBC,MAAtB,CAA8BJ,EAA9B,kGAAqC,kBAAON,QAAP,wKAEjCA,QAAQ,CAAC,CACPC,IAAI,CAAEL,mBADC,CAAD,CAAR,CAIMe,MAN2B,CAMlB,CACbC,OAAO,CAAE,CACP,eAAgB,kBADT,CADI,CANkB,wBAYVvB,CAAAA,KAAK,CAACwB,GAAN,sBACPP,EADO,EAErB,CAAEE,SAAS,CAATA,SAAF,CAAaC,QAAQ,CAARA,QAAb,CAAuBC,MAAM,CAANA,MAAvB,CAA+BJ,EAAE,CAAFA,EAA/B,CAFqB,CAGrBK,MAHqB,CAZU,wCAYzBR,IAZyB,kBAYzBA,IAZyB,CAkBjCH,QAAQ,CAAC,CACPC,IAAI,CAAEJ,mBADC,CAEPO,OAAO,CAAED,IAFF,CAAD,CAAR,CAlBiC,qFAuBjCH,QAAQ,CAAC,CACPC,IAAI,CAAEH,gBADC,CAEPM,OAAO,CAAE,aAAMU,OAFR,CAAD,CAAR,CAvBiC,uEAArC,kEADK","sourcesContent":["import axios from 'axios'; // AXIOS\n\n// GETTING CONSTANTS\nimport {\n  SLOT_LIST_FAIL,\n  SLOT_LIST_REQUEST,\n  SLOT_LIST_SUCCESS,\n  SLOT_DETAILS_REQUEST,\n  SLOT_DETAILS_SUCCESS,\n  SLOT_DETAILS_FAIL,\n  SLOT_UPDATE_REQUEST,\n  SLOT_UPDATE_SUCCESS,\n  SLOT_UPDATE_FAIL,\n} from '../constants/slotConstants';\n\n// LIST ALL POSTS ACTION\nexport const listSlots = () => async (dispatch) => {\n  try {\n    dispatch({ type: SLOT_LIST_REQUEST });\n\n    const { data } = await axios.get('/api/slot/getall');\n    dispatch({ type: SLOT_LIST_SUCCESS, payload: data });\n  } catch (error) {\n    dispatch({ type: SLOT_LIST_FAIL, payload: error });\n  }\n};\n\n// POST DETAIL ACTION\nexport const listSlotDetails = (id) => async (dispatch) => {\n  try {\n    dispatch({ type: SLOT_DETAILS_REQUEST });\n\n    const { data } = await axios.get(`/api/slot/${id}`);\n\n    dispatch({ type: SLOT_DETAILS_SUCCESS, payload: data });\n  } catch (error) {\n    dispatch({ type: SLOT_DETAILS_FAIL, payload: error });\n  }\n};\n\n// CREATE NEW POST ACTION\nexport const updateSlot =\n  (firstname, lastname, mobile, id) => async (dispatch) => {\n    try {\n      dispatch({\n        type: SLOT_UPDATE_REQUEST,\n      });\n\n      const config = {\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      };\n\n      const { data } = await axios.put(\n        `/api/slot/:${id}`,\n        { firstname, lastname, mobile, id },\n        config\n      );\n\n      dispatch({\n        type: SLOT_UPDATE_SUCCESS,\n        payload: data,\n      });\n    } catch (error) {\n      dispatch({\n        type: SLOT_UPDATE_FAIL,\n        payload: error.message,\n      });\n    }\n  };\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/media/pratham/Pratham/slot-book-app/frontend/src/screens/HomeScreen.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Slots from '../components/Slots';\nimport { Col, Row, Card } from 'react-bootstrap';\nimport { listSlots } from '../redux/actions/slotActions';\nimport ReactLoading from 'react-loading';\nimport Message from '../components/Message';\nimport { LinkContainer } from 'react-router-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst HomeScreen = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const slotsList = useSelector(state => state.slotsList);\n  const {\n    loading,\n    allSlots,\n    error\n  } = slotsList;\n  useEffect(() => {\n    dispatch(listSlots());\n  }, [dispatch]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-warning my-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"far fa-clock text-success\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), \" \", allSlots.slots[0]]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(HomeScreen, \"OaAZMYT6nzxJnSYa/CU+h9vrQU4=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = HomeScreen;\nexport default HomeScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"HomeScreen\");","map":{"version":3,"sources":["/media/pratham/Pratham/slot-book-app/frontend/src/screens/HomeScreen.jsx"],"names":["React","useEffect","useSelector","useDispatch","Slots","Col","Row","Card","listSlots","ReactLoading","Message","LinkContainer","HomeScreen","dispatch","slotsList","state","loading","allSlots","error","slots"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,SAASC,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,QAA+B,iBAA/B;AACA,SAASC,SAAT,QAA0B,8BAA1B;AACA,OAAOC,YAAP,MAAyB,eAAzB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,SAASC,aAAT,QAA8B,wBAA9B;;;;AAEA,MAAMC,UAAU,GAAG,MAAM;AAAA;;AACvB,QAAMC,QAAQ,GAAGV,WAAW,EAA5B;AACA,QAAMW,SAAS,GAAGZ,WAAW,CAAEa,KAAD,IAAWA,KAAK,CAACD,SAAlB,CAA7B;AACA,QAAM;AAAEE,IAAAA,OAAF;AAAWC,IAAAA,QAAX;AAAqBC,IAAAA;AAArB,MAA+BJ,SAArC;AAEAb,EAAAA,SAAS,CAAC,MAAM;AACdY,IAAAA,QAAQ,CAACL,SAAS,EAAV,CAAR;AACD,GAFQ,EAEN,CAACK,QAAD,CAFM,CAAT;AAIA,sBACE;AAAA,4BACE;AAAI,MAAA,SAAS,EAAC,mBAAd;AAAA,8BACE;AAAG,QAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,cADF,OACiDI,QAAQ,CAACE,KAAT,CAAe,CAAf,CADjD;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAKE,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA,YALF;AAAA,kBADF;AAeD,CAxBD;;GAAMP,U;UACaT,W,EACCD,W;;;KAFdU,U;AA0BN,eAAeA,UAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Slots from '../components/Slots';\nimport { Col, Row, Card } from 'react-bootstrap';\nimport { listSlots } from '../redux/actions/slotActions';\nimport ReactLoading from 'react-loading';\nimport Message from '../components/Message';\nimport { LinkContainer } from 'react-router-bootstrap';\n\nconst HomeScreen = () => {\n  const dispatch = useDispatch();\n  const slotsList = useSelector((state) => state.slotsList);\n  const { loading, allSlots, error } = slotsList;\n\n  useEffect(() => {\n    dispatch(listSlots());\n  }, [dispatch]);\n\n  return (\n    <>\n      <h1 className=\"text-warning my-4\">\n        <i className=\"far fa-clock text-success\"></i> {allSlots.slots[0]}\n      </h1>\n\n      <Row>\n        {/* {allSlots.slots.map((slot) => (\n          <Col key={slot._id} sm={12} md={6} lg={4} xl={3}>\n            <Slots slot={slot} />\n          </Col>\n        ))} */}\n      </Row>\n    </>\n  );\n};\n\nexport default HomeScreen;\n"]},"metadata":{},"sourceType":"module"}
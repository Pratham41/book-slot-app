{"ast":null,"code":"import axios from 'axios'; // AXIOS\n// GETTING CONSTANTS\n\nimport { SLOT_LIST_FAIL, SLOT_LIST_REQUEST, SLOT_LIST_SUCCESS, SLOT_DETAILS_REQUEST, SLOT_DETAILS_SUCCESS, SLOT_DETAILS_FAIL, SLOT_UPDATE_REQUEST, SLOT_UPDATE_SUCCESS, SLOT_UPDATE_FAIL } from '../constants/slotConstants'; // LIST ALL POSTS ACTION\n\nexport const listSlots = () => async dispatch => {\n  try {\n    dispatch({\n      type: SLOT_LIST_REQUEST\n    });\n    const {\n      data\n    } = await axios.get('/api/slot/getall');\n    dispatch({\n      type: SLOT_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: SLOT_LIST_FAIL,\n      payload: error\n    });\n  }\n}; // POST DETAIL ACTION\n\nexport const listSlotDetails = id => async dispatch => {\n  try {\n    dispatch({\n      type: SLOT_DETAILS_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(`/api/slot/${id}`);\n    dispatch({\n      type: SLOT_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: SLOT_DETAILS_FAIL,\n      payload: error\n    });\n  }\n}; // CREATE NEW POST ACTION\n\nexport const updateSlot = (firstname, lastname, mobile, id) => async dispatch => {\n  try {\n    dispatch({\n      type: SLOT_UPDATE_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.put('/api/posts', {\n      firstname,\n      lastname,\n      mobile,\n      id\n    }, config);\n    dispatch({\n      type: SLOT_UPDATE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: SLOT_UPDATE_FAIL,\n      payload: error.message\n    });\n  }\n};","map":{"version":3,"sources":["/media/pratham/Pratham/slot-book-app/frontend/src/redux/actions/slotActions.js"],"names":["axios","SLOT_LIST_FAIL","SLOT_LIST_REQUEST","SLOT_LIST_SUCCESS","SLOT_DETAILS_REQUEST","SLOT_DETAILS_SUCCESS","SLOT_DETAILS_FAIL","SLOT_UPDATE_REQUEST","SLOT_UPDATE_SUCCESS","SLOT_UPDATE_FAIL","listSlots","dispatch","type","data","get","payload","error","listSlotDetails","id","updateSlot","firstname","lastname","mobile","config","headers","put","message"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CAA2B;AAE3B;;AACA,SACEC,cADF,EAEEC,iBAFF,EAGEC,iBAHF,EAIEC,oBAJF,EAKEC,oBALF,EAMEC,iBANF,EAOEC,mBAPF,EAQEC,mBARF,EASEC,gBATF,QAUO,4BAVP,C,CAYA;;AACA,OAAO,MAAMC,SAAS,GAAG,MAAM,MAAOC,QAAP,IAAoB;AACjD,MAAI;AACFA,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEV;AAAR,KAAD,CAAR;AAEA,UAAM;AAAEW,MAAAA;AAAF,QAAW,MAAMb,KAAK,CAACc,GAAN,CAAU,kBAAV,CAAvB;AACAH,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAET,iBAAR;AAA2BY,MAAAA,OAAO,EAAEF;AAApC,KAAD,CAAR;AACD,GALD,CAKE,OAAOG,KAAP,EAAc;AACdL,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEX,cAAR;AAAwBc,MAAAA,OAAO,EAAEC;AAAjC,KAAD,CAAR;AACD;AACF,CATM,C,CAWP;;AACA,OAAO,MAAMC,eAAe,GAAIC,EAAD,IAAQ,MAAOP,QAAP,IAAoB;AACzD,MAAI;AACFA,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAER;AAAR,KAAD,CAAR;AAEA,UAAM;AAAES,MAAAA;AAAF,QAAW,MAAMb,KAAK,CAACc,GAAN,CAAW,aAAYI,EAAG,EAA1B,CAAvB;AAEAP,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEP,oBAAR;AAA8BU,MAAAA,OAAO,EAAEF;AAAvC,KAAD,CAAR;AACD,GAND,CAME,OAAOG,KAAP,EAAc;AACdL,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEN,iBAAR;AAA2BS,MAAAA,OAAO,EAAEC;AAApC,KAAD,CAAR;AACD;AACF,CAVM,C,CAYP;;AACA,OAAO,MAAMG,UAAU,GACrB,CAACC,SAAD,EAAYC,QAAZ,EAAsBC,MAAtB,EAA8BJ,EAA9B,KAAqC,MAAOP,QAAP,IAAoB;AACvD,MAAI;AACFA,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEL;AADC,KAAD,CAAR;AAIA,UAAMgB,MAAM,GAAG;AACbC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT;AADI,KAAf;AAMA,UAAM;AAAEX,MAAAA;AAAF,QAAW,MAAMb,KAAK,CAACyB,GAAN,CACrB,YADqB,EAErB;AAAEL,MAAAA,SAAF;AAAaC,MAAAA,QAAb;AAAuBC,MAAAA,MAAvB;AAA+BJ,MAAAA;AAA/B,KAFqB,EAGrBK,MAHqB,CAAvB;AAMAZ,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEJ,mBADC;AAEPO,MAAAA,OAAO,EAAEF;AAFF,KAAD,CAAR;AAID,GArBD,CAqBE,OAAOG,KAAP,EAAc;AACdL,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEH,gBADC;AAEPM,MAAAA,OAAO,EAAEC,KAAK,CAACU;AAFR,KAAD,CAAR;AAID;AACF,CA7BI","sourcesContent":["import axios from 'axios'; // AXIOS\n\n// GETTING CONSTANTS\nimport {\n  SLOT_LIST_FAIL,\n  SLOT_LIST_REQUEST,\n  SLOT_LIST_SUCCESS,\n  SLOT_DETAILS_REQUEST,\n  SLOT_DETAILS_SUCCESS,\n  SLOT_DETAILS_FAIL,\n  SLOT_UPDATE_REQUEST,\n  SLOT_UPDATE_SUCCESS,\n  SLOT_UPDATE_FAIL,\n} from '../constants/slotConstants';\n\n// LIST ALL POSTS ACTION\nexport const listSlots = () => async (dispatch) => {\n  try {\n    dispatch({ type: SLOT_LIST_REQUEST });\n\n    const { data } = await axios.get('/api/slot/getall');\n    dispatch({ type: SLOT_LIST_SUCCESS, payload: data });\n  } catch (error) {\n    dispatch({ type: SLOT_LIST_FAIL, payload: error });\n  }\n};\n\n// POST DETAIL ACTION\nexport const listSlotDetails = (id) => async (dispatch) => {\n  try {\n    dispatch({ type: SLOT_DETAILS_REQUEST });\n\n    const { data } = await axios.get(`/api/slot/${id}`);\n\n    dispatch({ type: SLOT_DETAILS_SUCCESS, payload: data });\n  } catch (error) {\n    dispatch({ type: SLOT_DETAILS_FAIL, payload: error });\n  }\n};\n\n// CREATE NEW POST ACTION\nexport const updateSlot =\n  (firstname, lastname, mobile, id) => async (dispatch) => {\n    try {\n      dispatch({\n        type: SLOT_UPDATE_REQUEST,\n      });\n\n      const config = {\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      };\n\n      const { data } = await axios.put(\n        '/api/posts',\n        { firstname, lastname, mobile, id },\n        config\n      );\n\n      dispatch({\n        type: SLOT_UPDATE_SUCCESS,\n        payload: data,\n      });\n    } catch (error) {\n      dispatch({\n        type: SLOT_UPDATE_FAIL,\n        payload: error.message,\n      });\n    }\n  };\n"]},"metadata":{},"sourceType":"module"}
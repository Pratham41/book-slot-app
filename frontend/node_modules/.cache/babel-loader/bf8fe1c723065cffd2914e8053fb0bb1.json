{"ast":null,"code":"var _jsxFileName = \"/media/pratham/Pratham/slot-book-app/frontend/src/screens/HomeScreen.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Slots from '../components/Slots';\nimport { Col, Row, Card } from 'react-bootstrap';\nimport { listSlots } from '../redux/actions/slotActions';\nimport ReactLoading from 'react-loading';\nimport Message from '../components/Message';\nimport { LinkContainer } from 'react-router-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst HomeScreen = () => {\n  _s();\n\n  var _allSlots$slots;\n\n  const dispatch = useDispatch();\n  const slotsList = useSelector(state => state.slotsList);\n  const {\n    loading,\n    allSlots,\n    error\n  } = slotsList;\n  useEffect(() => {\n    dispatch(listSlots());\n  }, [dispatch]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-primary my-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fas fa-user-clock text-secondary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), \" Slots\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(Message, {\n      variant: \"danger\",\n      children: [\" \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 17\n    }, this), loading && /*#__PURE__*/_jsxDEV(ReactLoading, {\n      className: \"m-auto\",\n      type: \"spin\",\n      color: \"blue\",\n      height: '10%',\n      width: '10%'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: allSlots === null || allSlots === void 0 ? void 0 : (_allSlots$slots = allSlots.slots) === null || _allSlots$slots === void 0 ? void 0 : _allSlots$slots.map(slot => /*#__PURE__*/_jsxDEV(Col, {\n        sm: 12,\n        md: 6,\n        lg: 4,\n        xl: 3,\n        children: /*#__PURE__*/_jsxDEV(Slots, {\n          slot: slot\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this)\n      }, slot._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"my-4 py-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"text-danger\",\n        children: \"Booked\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"text-info\",\n        children: \"Not Booked\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(HomeScreen, \"OaAZMYT6nzxJnSYa/CU+h9vrQU4=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = HomeScreen;\nexport default HomeScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"HomeScreen\");","map":{"version":3,"sources":["/media/pratham/Pratham/slot-book-app/frontend/src/screens/HomeScreen.jsx"],"names":["React","useState","useEffect","useSelector","useDispatch","Slots","Col","Row","Card","listSlots","ReactLoading","Message","LinkContainer","HomeScreen","dispatch","slotsList","state","loading","allSlots","error","slots","map","slot","_id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,SAASC,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,QAA+B,iBAA/B;AACA,SAASC,SAAT,QAA0B,8BAA1B;AACA,OAAOC,YAAP,MAAyB,eAAzB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,SAASC,aAAT,QAA8B,wBAA9B;;;;AAEA,MAAMC,UAAU,GAAG,MAAM;AAAA;;AAAA;;AACvB,QAAMC,QAAQ,GAAGV,WAAW,EAA5B;AACA,QAAMW,SAAS,GAAGZ,WAAW,CAAEa,KAAD,IAAWA,KAAK,CAACD,SAAlB,CAA7B;AACA,QAAM;AAAEE,IAAAA,OAAF;AAAWC,IAAAA,QAAX;AAAqBC,IAAAA;AAArB,MAA+BJ,SAArC;AAEAb,EAAAA,SAAS,CAAC,MAAM;AACdY,IAAAA,QAAQ,CAACL,SAAS,EAAV,CAAR;AACD,GAFQ,EAEN,CAACK,QAAD,CAFM,CAAT;AAIA,sBACE;AAAA,4BACE;AAAI,MAAA,SAAS,EAAC,mBAAd;AAAA,8BACE;AAAG,QAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,cADF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAKGK,KAAK,iBAAI,QAAC,OAAD;AAAS,MAAA,OAAO,EAAC,QAAjB;AAAA,sBAA4BA,KAA5B;AAAA;AAAA;AAAA;AAAA;AAAA,YALZ,EAOGF,OAAO,iBACN,QAAC,YAAD;AACE,MAAA,SAAS,EAAC,QADZ;AAEE,MAAA,IAAI,EAAC,MAFP;AAGE,MAAA,KAAK,EAAC,MAHR;AAIE,MAAA,MAAM,EAAE,KAJV;AAKE,MAAA,KAAK,EAAE;AALT;AAAA;AAAA;AAAA;AAAA,YARJ,eAiBE,QAAC,GAAD;AAAA,gBACGC,QADH,aACGA,QADH,0CACGA,QAAQ,CAAEE,KADb,oDACG,gBAAiBC,GAAjB,CAAsBC,IAAD,iBACpB,QAAC,GAAD;AAAoB,QAAA,EAAE,EAAE,EAAxB;AAA4B,QAAA,EAAE,EAAE,CAAhC;AAAmC,QAAA,EAAE,EAAE,CAAvC;AAA0C,QAAA,EAAE,EAAE,CAA9C;AAAA,+BACE,QAAC,KAAD;AAAO,UAAA,IAAI,EAAEA;AAAb;AAAA;AAAA;AAAA;AAAA;AADF,SAAUA,IAAI,CAACC,GAAf;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YAjBF,eAyBE;AAAI,MAAA,SAAS,EAAC,WAAd;AAAA,8BACE;AAAI,QAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAI,QAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAzBF;AAAA,kBADF;AAgCD,CAzCD;;GAAMV,U;UACaT,W,EACCD,W;;;KAFdU,U;AA2CN,eAAeA,UAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Slots from '../components/Slots';\nimport { Col, Row, Card } from 'react-bootstrap';\nimport { listSlots } from '../redux/actions/slotActions';\nimport ReactLoading from 'react-loading';\nimport Message from '../components/Message';\nimport { LinkContainer } from 'react-router-bootstrap';\n\nconst HomeScreen = () => {\n  const dispatch = useDispatch();\n  const slotsList = useSelector((state) => state.slotsList);\n  const { loading, allSlots, error } = slotsList;\n\n  useEffect(() => {\n    dispatch(listSlots());\n  }, [dispatch]);\n\n  return (\n    <>\n      <h1 className=\"text-primary my-4\">\n        <i className=\"fas fa-user-clock text-secondary\"></i> Slots\n      </h1>\n\n      {error && <Message variant=\"danger\"> {error}</Message>}\n\n      {loading && (\n        <ReactLoading\n          className=\"m-auto\"\n          type=\"spin\"\n          color=\"blue\"\n          height={'10%'}\n          width={'10%'}\n        />\n      )}\n\n      <Row>\n        {allSlots?.slots?.map((slot) => (\n          <Col key={slot._id} sm={12} md={6} lg={4} xl={3}>\n            <Slots slot={slot} />\n          </Col>\n        ))}\n      </Row>\n\n      <ul className=\"my-4 py-4\">\n        <li className=\"text-danger\">Booked</li>\n        <li className=\"text-info\">Not Booked</li>\n      </ul>\n    </>\n  );\n};\n\nexport default HomeScreen;\n"]},"metadata":{},"sourceType":"module"}
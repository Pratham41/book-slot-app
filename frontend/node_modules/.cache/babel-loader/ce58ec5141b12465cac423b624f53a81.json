{"ast":null,"code":"import{createStore,combineReducers,applyMiddleware}from'redux';import thunk from'redux-thunk';import{composeWithDevTools}from'redux-devtools-extension';import{userLoginReducer,userRegisterReducer}from'./redux/reducers/userReducer';import{slotListReducer,slotDetailsReducer,slotUpdateReducer}from'./redux/reducers/slotReducer';var reducer=combineReducers({userLogin:userLoginReducer,userRegister:userRegisterReducer,slotsList:slotListReducer,slotDetails:slotDetailsReducer,slotUpdate:slotUpdateReducer});var userInfoFromStorage=localStorage.getItem('userInfo')?JSON.parse(localStorage.getItem('userInfo')):null;var initialState={userLogin:{userInfo:userInfoFromStorage}};var middleware=[thunk];var store=createStore(reducer,initialState,composeWithDevTools(applyMiddleware.apply(void 0,middleware)));export default store;","map":{"version":3,"sources":["/media/pratham/Pratham/slot-book-app/frontend/src/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","userLoginReducer","userRegisterReducer","slotListReducer","slotDetailsReducer","slotUpdateReducer","reducer","userLogin","userRegister","slotsList","slotDetails","slotUpdate","userInfoFromStorage","localStorage","getItem","JSON","parse","initialState","userInfo","middleware","store"],"mappings":"AAAA,OAASA,WAAT,CAAsBC,eAAtB,CAAuCC,eAAvC,KAA8D,OAA9D,CACA,MAAOC,CAAAA,KAAP,KAAkB,aAAlB,CACA,OAASC,mBAAT,KAAoC,0BAApC,CAEA,OACEC,gBADF,CAEEC,mBAFF,KAGO,8BAHP,CAKA,OACEC,eADF,CAEEC,kBAFF,CAGEC,iBAHF,KAIO,8BAJP,CAMA,GAAMC,CAAAA,OAAO,CAAGT,eAAe,CAAC,CAC9BU,SAAS,CAAEN,gBADmB,CAE9BO,YAAY,CAAEN,mBAFgB,CAG9BO,SAAS,CAAEN,eAHmB,CAI9BO,WAAW,CAAEN,kBAJiB,CAK9BO,UAAU,CAAEN,iBALkB,CAAD,CAA/B,CAQA,GAAMO,CAAAA,mBAAmB,CAAGC,YAAY,CAACC,OAAb,CAAqB,UAArB,EACxBC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CADwB,CAExB,IAFJ,CAIA,GAAMG,CAAAA,YAAY,CAAG,CACnBV,SAAS,CAAE,CAAEW,QAAQ,CAAEN,mBAAZ,CADQ,CAArB,CAIA,GAAMO,CAAAA,UAAU,CAAG,CAACpB,KAAD,CAAnB,CAEA,GAAMqB,CAAAA,KAAK,CAAGxB,WAAW,CACvBU,OADuB,CAEvBW,YAFuB,CAGvBjB,mBAAmB,CAACF,eAAe,MAAf,QAAmBqB,UAAnB,CAAD,CAHI,CAAzB,CAMA,cAAeC,CAAAA,KAAf","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nimport {\n  userLoginReducer,\n  userRegisterReducer,\n} from './redux/reducers/userReducer';\n\nimport {\n  slotListReducer,\n  slotDetailsReducer,\n  slotUpdateReducer,\n} from './redux/reducers/slotReducer';\n\nconst reducer = combineReducers({\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  slotsList: slotListReducer,\n  slotDetails: slotDetailsReducer,\n  slotUpdate: slotUpdateReducer,\n});\n\nconst userInfoFromStorage = localStorage.getItem('userInfo')\n  ? JSON.parse(localStorage.getItem('userInfo'))\n  : null;\n\nconst initialState = {\n  userLogin: { userInfo: userInfoFromStorage },\n};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  reducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default store;\n"]},"metadata":{},"sourceType":"module"}
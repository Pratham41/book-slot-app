{"ast":null,"code":"import axios from 'axios'; // AXIOS\n// GETTING CONSTANTS\n\nimport { SLOT_LIST_FAIL, SLOT_LIST_REQUEST, SLOT_LIST_SUCCESS, SLOT_DETAILS_REQUEST, SLOT_DETAILS_SUCCESS, SLOT_DETAILS_FAIL, SLOT_CREATE_REQUEST, SLOT_CREATE_SUCCESS, SLOT_CREATE_FAIL } from '../constants/slotConstants'; // LIST ALL POSTS ACTION\n\nexport const listSlots = () => async dispatch => {\n  try {\n    dispatch({\n      type: SLOT_LIST_REQUEST\n    });\n    const {\n      data\n    } = await axios.get('/api/slot/getall');\n    console.log(data);\n    dispatch({\n      type: SLOT_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: SLOT_LIST_FAIL,\n      payload: error\n    });\n  }\n}; // POST DETAIL ACTION\n\nexport const listPostDetails = id => async dispatch => {\n  try {\n    dispatch({\n      type: SLOT_DETAILS_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(`/api/posts/${id}`);\n    dispatch({\n      type: SLOT_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: SLOT_DETAILS_FAIL,\n      payload: error\n    });\n  }\n}; // CREATE NEW POST ACTION\n\nexport const createPost = (title, name, content) => async dispatch => {\n  try {\n    dispatch({\n      type: SLOT_CREATE_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.post('/api/posts', {\n      title,\n      name,\n      content\n    }, config);\n    dispatch({\n      type: SLOT_CREATE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: SLOT_CREATE_FAIL,\n      payload: error.message\n    });\n  }\n};","map":{"version":3,"sources":["/media/pratham/Pratham/slot-book-app/frontend/src/redux/actions/slotActions.js"],"names":["axios","SLOT_LIST_FAIL","SLOT_LIST_REQUEST","SLOT_LIST_SUCCESS","SLOT_DETAILS_REQUEST","SLOT_DETAILS_SUCCESS","SLOT_DETAILS_FAIL","SLOT_CREATE_REQUEST","SLOT_CREATE_SUCCESS","SLOT_CREATE_FAIL","listSlots","dispatch","type","data","get","console","log","payload","error","listPostDetails","id","createPost","title","name","content","config","headers","post","message"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CAA2B;AAE3B;;AACA,SACEC,cADF,EAEEC,iBAFF,EAGEC,iBAHF,EAIEC,oBAJF,EAKEC,oBALF,EAMEC,iBANF,EAOEC,mBAPF,EAQEC,mBARF,EASEC,gBATF,QAUO,4BAVP,C,CAYA;;AACA,OAAO,MAAMC,SAAS,GAAG,MAAM,MAAOC,QAAP,IAAoB;AACjD,MAAI;AACFA,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEV;AAAR,KAAD,CAAR;AAEA,UAAM;AAAEW,MAAAA;AAAF,QAAW,MAAMb,KAAK,CAACc,GAAN,CAAU,kBAAV,CAAvB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACAF,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAET,iBAAR;AAA2Bc,MAAAA,OAAO,EAAEJ;AAApC,KAAD,CAAR;AACD,GAND,CAME,OAAOK,KAAP,EAAc;AACdP,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEX,cAAR;AAAwBgB,MAAAA,OAAO,EAAEC;AAAjC,KAAD,CAAR;AACD;AACF,CAVM,C,CAYP;;AACA,OAAO,MAAMC,eAAe,GAAIC,EAAD,IAAQ,MAAOT,QAAP,IAAoB;AACzD,MAAI;AACFA,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAER;AAAR,KAAD,CAAR;AAEA,UAAM;AAAES,MAAAA;AAAF,QAAW,MAAMb,KAAK,CAACc,GAAN,CAAW,cAAaM,EAAG,EAA3B,CAAvB;AAEAT,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEP,oBAAR;AAA8BY,MAAAA,OAAO,EAAEJ;AAAvC,KAAD,CAAR;AACD,GAND,CAME,OAAOK,KAAP,EAAc;AACdP,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEN,iBAAR;AAA2BW,MAAAA,OAAO,EAAEC;AAApC,KAAD,CAAR;AACD;AACF,CAVM,C,CAYP;;AACA,OAAO,MAAMG,UAAU,GAAG,CAACC,KAAD,EAAQC,IAAR,EAAcC,OAAd,KAA0B,MAAOb,QAAP,IAAoB;AACtE,MAAI;AACFA,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEL;AADC,KAAD,CAAR;AAIA,UAAMkB,MAAM,GAAG;AACbC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT;AADI,KAAf;AAMA,UAAM;AAAEb,MAAAA;AAAF,QAAW,MAAMb,KAAK,CAAC2B,IAAN,CACrB,YADqB,EAErB;AAAEL,MAAAA,KAAF;AAASC,MAAAA,IAAT;AAAeC,MAAAA;AAAf,KAFqB,EAGrBC,MAHqB,CAAvB;AAMAd,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEJ,mBADC;AAEPS,MAAAA,OAAO,EAAEJ;AAFF,KAAD,CAAR;AAID,GArBD,CAqBE,OAAOK,KAAP,EAAc;AACdP,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEH,gBADC;AAEPQ,MAAAA,OAAO,EAAEC,KAAK,CAACU;AAFR,KAAD,CAAR;AAID;AACF,CA5BM","sourcesContent":["import axios from 'axios'; // AXIOS\n\n// GETTING CONSTANTS\nimport {\n  SLOT_LIST_FAIL,\n  SLOT_LIST_REQUEST,\n  SLOT_LIST_SUCCESS,\n  SLOT_DETAILS_REQUEST,\n  SLOT_DETAILS_SUCCESS,\n  SLOT_DETAILS_FAIL,\n  SLOT_CREATE_REQUEST,\n  SLOT_CREATE_SUCCESS,\n  SLOT_CREATE_FAIL,\n} from '../constants/slotConstants';\n\n// LIST ALL POSTS ACTION\nexport const listSlots = () => async (dispatch) => {\n  try {\n    dispatch({ type: SLOT_LIST_REQUEST });\n\n    const { data } = await axios.get('/api/slot/getall');\n    console.log(data);\n    dispatch({ type: SLOT_LIST_SUCCESS, payload: data });\n  } catch (error) {\n    dispatch({ type: SLOT_LIST_FAIL, payload: error });\n  }\n};\n\n// POST DETAIL ACTION\nexport const listPostDetails = (id) => async (dispatch) => {\n  try {\n    dispatch({ type: SLOT_DETAILS_REQUEST });\n\n    const { data } = await axios.get(`/api/posts/${id}`);\n\n    dispatch({ type: SLOT_DETAILS_SUCCESS, payload: data });\n  } catch (error) {\n    dispatch({ type: SLOT_DETAILS_FAIL, payload: error });\n  }\n};\n\n// CREATE NEW POST ACTION\nexport const createPost = (title, name, content) => async (dispatch) => {\n  try {\n    dispatch({\n      type: SLOT_CREATE_REQUEST,\n    });\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    };\n\n    const { data } = await axios.post(\n      '/api/posts',\n      { title, name, content },\n      config\n    );\n\n    dispatch({\n      type: SLOT_CREATE_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: SLOT_CREATE_FAIL,\n      payload: error.message,\n    });\n  }\n};\n"]},"metadata":{},"sourceType":"module"}